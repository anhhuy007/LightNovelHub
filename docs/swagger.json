{
    "swagger": "2.0",
    "info": {
        "title": "Light novel API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/accounts/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Log the user in, return a new user session",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/route.authCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SessionInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts/logout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Log the user out",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.IncludeSessionString"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/accounts/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Register the user, return a new user session",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/route.authCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SessionInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounts/renew": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Renew the session token, the token should be renewed a week before expires",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.IncludeSessionString"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SessionInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/novel/:NovelID": {
            "get": {
                "description": "If the novel is private, the user need to be logged in with the author account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "novel"
                ],
                "summary": "Get the novel with provided novel id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Novel ID",
                        "name": "NovelID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.NovelView"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/novel/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "novel"
                ],
                "summary": "Create a new novel, return the created novel id",
                "parameters": [
                    {
                        "description": "Novel details",
                        "name": "NovelDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateNovelArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.createNovelResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CreateNovelArgs": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "tagline": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.IncludeSessionString": {
            "type": "object",
            "properties": {
                "session": {
                    "type": "string"
                }
            }
        },
        "model.NovelView": {
            "type": "object",
            "properties": {
                "adult": {
                    "type": "boolean"
                },
                "author": {
                    "$ref": "#/definitions/model.UserView"
                },
                "clicks": {
                    "type": "integer"
                },
                "createAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "rateCount": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "tagline": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TagView"
                    }
                },
                "title": {
                    "type": "string"
                },
                "totalRating": {
                    "type": "integer"
                },
                "updateAt": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                },
                "visibility": {
                    "type": "string"
                },
                "volumes": {
                    "type": "integer"
                }
            }
        },
        "model.SessionInfo": {
            "type": "object",
            "properties": {
                "expired_at": {
                    "type": "string"
                },
                "session": {
                    "type": "string"
                }
            }
        },
        "model.TagView": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.UserView": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "image": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "route.authCredentials": {
            "type": "object",
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "route.createNovelResult": {
            "type": "object",
            "properties": {
                "novel_id": {
                    "type": "string"
                }
            }
        }
    }
}